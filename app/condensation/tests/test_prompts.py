from app.condensation.controller import openai_client, generate_user_prompt
from app.condensation.prompts import get_system_prompt
from app.fragmentation.controller import fragmentize_article
from app.configs import OPENAI_LLM_MODEL, OPENAI_LLM_TEMPERATURE


# System promp para los tests
testing_system_prompt = """
    You are an assitant for testing how clear and concise a prompt for information classification is. Provide as an answer only an integer from 0 to 100 on how good the prompt is, 100 beign the best.
"""

def test_system_prompt() -> None:
    """
    Prueba si el system prompt es consiso, claro y tiene una estructura entendible.
    """
    system_prompt = get_system_prompt()
    completion = openai_client.chat.completions.create(
        model=OPENAI_LLM_MODEL,
        temperature=OPENAI_LLM_TEMPERATURE,
        messages=[
            {"role": "system", "content": testing_system_prompt},
            {"role": "user", "content": f"here is a prompt for a system prompt: {system_prompt}"},
        ],
    )
    # Se espera que obtenga un scode de al menos 75
    assert int(completion.choices[0].message.content) >= 75


def test_user_prompt() -> None:
    """
    Prueba si el system prompt generado para un art√≠culo es claro y tiene una estructura entendible.
    """
    article = {
        "type": "article",
        "url": "https://adereso.helpkit.so/adereso-studio/7gcst3pjvWGmqqFfDDVKs7/personaliza-los-flujos-de-tu-bot/jajYKTmXAs9MQ29LBjcF7g", 
        "text": "Personaliza los Flujos de tu Bot\nIntenciones En esta secci\u00f3n se definen las intenciones que tu bot ser\u00e1 capaz de reconocer y manejar. Estas intenciones deben ser representativas de las preguntas y solicitudes que los usuarios puedan tener al interactuar con tu negocio o marca. \ud83d\udca1 Las intenciones son categor\u00edas o etiquetas que se asignan a las preguntas o solicitudes de los usuarios para clasificar y comprender su objetivo principal. Cada pregunta o consulta que reciba el bot puede estar asociada a una intenci\u00f3n espec\u00edfica. Desde este apartado puedes: crear, editar y eliminar intenciones. A\u00f1adir intenci\u00f3n Para crear una nueva intenci\u00f3n, debes hacer click en \u201c A\u00f1adir intenci\u00f3n \u201d. Se abrir\u00e1 una ventana lateral como esta, donde debes ingresar: Nombre: Es un nombre para identificar a la intenci\u00f3n de forma interna. Descripci\u00f3n: Esta es la definici\u00f3n que recibir\u00e1 el bot sobre la intenci\u00f3n. Es necesario dejar las descripciones lo m\u00e1s claras posibles para que el bot pueda detectar las intenciones correctamente. Keywords (Opcional): Se agregan palabras clave que el bot asociar\u00e1 de manera directa a la intenci\u00f3n.\nDebes tener cuidado de no poner conceptos muy generales ya que el bot puede confundirse y clasificar la intenci\u00f3n de manera incorrecta si es que el mensaje del usuario incluye casualmente la keyword definida. \u26d4 A modo general, se recomienda utilizar Keywords s\u00f3lo cuando se necesita que el bot detecte la intenci\u00f3n con dicha palabra sin distinci\u00f3n del contexto. Ejemplo: Si se configura una intenci\u00f3n de \u201cCompra\u201d y se ingresa como Keyword la palabra \u201cCompra\u201d , en el caso que el cliente escriba \u201c\u00a1Hola! Mi compra no lleg\u00f3\u201d , el sistema tomar\u00e1 la intenci\u00f3n como \u201cCompra\u201d cuando esta no es en realidad la correcta. Ejemplos (Opcional): Puedes agregar ejemplos de conversaciones para ayudar al bot a detectar la intenci\u00f3n. Los ejemplos servir\u00e1n para entregarle al bot distintas maneras en que el usuario podr\u00eda referirse en un mensaje que debe ser detectado por la intenci\u00f3n. Ejemplo Nombre: Precio. Descripci\u00f3n: Usuario pregunta por el precio de un libro. Keywords: En este caso no usaremos keyword porque no existe ninguna palabra exacta que podr\u00eda vincularse a la intenci\u00f3n. Si us\u00e1ramos palabras como \u201cprecio\u201d, el bot podr\u00eda confundir una intenci\u00f3n de queja de precio a la intenci\u00f3n de pregunta de precio. En este caso, es mejor cargar casos en ejemplos. Ejemplos: Cliente: \u00bfCu\u00e1l es el precio? Cliente: \u00bfCu\u00e1nto cuesta? Cliente: \u00bfCu\u00e1nto vale? No es necesario agregar mensaje del \u201cBot\u201d, puedes solamente usar el campo de \u201cCliente\u201d y funcionar\u00e1 de igual manera. El campo \u201cBot\u201d ser\u00e1 \u00fatil en caso de que est\u00e9s configurando un flujo particular en donde sea importante detectar el contexto del bot antes de lo que escribe el cliente. Para entender este caso se puede considerar una intenci\u00f3n de \u201cRetroalimentaci\u00f3n positiva\u201d, donde el ejemplo ser\u00eda: Bot: \u201c\u00bfTe sirvi\u00f3 la respuesta entregada?\u201d Cliente: \u201c S\u00ed\u201d Cuando hayas ingresado la informaci\u00f3n, haz click en Guardar para cargar la nueva intenci\u00f3n a tu configuraci\u00f3n de bot. Desde el listado de intenciones puedes editarlas y eliminarlas haciendo click en la acci\u00f3n correspondiente. Flujos Para entender esta secci\u00f3n primero debes entender qu\u00e9 es un flujo. \ud83d\udca1 Un flujo se refiere a la secuencia de pasos o actividades que se siguen para completar un proceso. El flujo est\u00e1 representado por las l\u00edneas o flechas que conectan los nodos, indicando la direcci\u00f3n y el orden en que se deben realizar las acciones o tomar decisiones. En Adereso Studio, esta secuencia de pasos se configuran a trav\u00e9s de las instrucciones, que son acciones que realizar\u00e1 el bot. Pueden significar un contacto con el cliente final dentro del chat (es decir, instrucciones visibles al usuario) o pueden ser internas (lo que significa que el usuario con quien interact\u00faa el bot, no las ver\u00e1). Algunas de las instrucciones m\u00e1s usadas son: mensaje, derivaci\u00f3n, cierre y obtenci\u00f3n de datos. Listado de flujos Muestra una tabla con los flujos configurados en este bot. Puedes habilitarlos o deshabilitarlos y darles un orden dentro del listado. En esta versi\u00f3n puedes visualizar los flujos existentes en el bot, pero solamente podr\u00e1s editarlos en caso de que sean flujos simples. A\u00f1adir flujo Para poder crear un flujo nuevo, debes hacer click en A\u00f1adir flujo. Te redirigir\u00e1n a la vista de edici\u00f3n del flujo, la cual se compone por lo siguiente: Nombre del flujo: Debes nombrar tu flujo para reconocerlo luego en el sistema. Botones de: Guardado Deshacer Rehacer Agregar instrucci\u00f3n Botones de: Zoom in Zoom out Centrar Reordenar flujo Primer nodo del flujo, el cual indica el disparador del flujo. Al hacer click en cada nodo, podr\u00e1s editarlo. A medida de que vayas creando tu flujo, empezar\u00e1s a ver el diagrama en este espacio. Editor de flujo El editor de flujo muestra el diagrama que vayas generando a medida de que construyas tu flujo. Para poder editar una instrucci\u00f3n, puedes hacer click directamente en el nodo que lo representa en el diagrama. Tambi\u00e9n puedes hacer click en los 3 puntos que est\u00e1n en la esquina superior derecha de cada nodo, y se abrir\u00e1 un listado de opciones para: Editar : se abrir\u00e1 el modal para editar la instrucci\u00f3n. Duplicar : se duplicar\u00e1 la instrucci\u00f3n y se crear\u00e1 un nuevo nodo en el flujo que estar\u00e1 desconectado. Eliminar : al eliminar una instrucci\u00f3n, se desconectar\u00e1 tambi\u00e9n de los otros nodos con los que conectada (instrucciones previas y posteriores). Desconectar : desconectar\u00e1 el nodo tanto de los nodos entrantes como salientes (anteriores y posteriores). La instrucci\u00f3n condici\u00f3n no puede ser duplicada, pero s\u00ed tiene el resto de las funciones. \ud83d\udca1 El disparador no cuenta con estas opciones y solo puedes editarlo. Componentes de un flujo El flujo se compone de nodos y reglas. El primer nodo ser\u00e1 siempre el disparador del flujo y los siguientes indicar\u00e1n instrucciones. Disparadores: el disparador de un flujo es lo que indica c\u00f3mo se gatillar\u00e1. Puede ser con condici\u00f3n o sin condici\u00f3n. Condici\u00f3n : esto significa que el flujo se activar\u00e1 cuando se cumplan las condiciones l\u00f3gicas que se han expresado en el disparador. Sin condici\u00f3n: esto significa que el flujo se activar\u00e1 dentro de otro flujo, es decir, ser\u00e1 llamado a partir de una instrucci\u00f3n. Condici\u00f3n - Puede ser de 4 tipos: 1.- Intenci\u00f3n : debes seleccionar una intenci\u00f3n de las creadas en el sistema y esto ser\u00e1 lo que gatille el flujo. Esto significa que en cualquier momento que el bot identifique la intenci\u00f3n establecida, gatillar\u00e1 el flujo y seguir\u00e1 las instrucciones configuradas en \u00e9ste. Por ejemplo: si seleccionas la intenci\u00f3n \u201cReserva\u201d, el bot al detectar que un usuario quiere hacer una reserva, va a seguir las instrucciones del flujo: ofrecer una reserva entregando disponibilidad para agendar. 2.- Sentimiento : debes seleccionar entre Positivo, Negativo o Neutro y el flujo se gatillar\u00e1 cuando el bot detecte que un mensaje del usuario contenga este sentimiento. 3.- Mensaje : se selecciona entre las opciones Privado : el flujo se activar\u00e1 ante un mensaje de canal privado. P\u00fablico : el flujo se activar\u00e1 ante un mensaje de canal p\u00fablico. Menci\u00f3n en historia (SI) : sirve para gatillar flujos en el caso espec\u00edfico de que la cuenta en que est\u00e1 activo el bot haya sido etiquetada en una historia de Instagram. Menci\u00f3n en historia (NO) : sirve para gatillar flujos a partir de mensajes que NO son menciones en historias de Instagram. 4.- HSM: este tipo de disparador es para crear un flujo que se origina a partir del env\u00edo de una campa\u00f1a. Debes seleccionar la cuenta y el HSM desde el cual se gatillar\u00e1 un flujo. Luego de crear el disparador, debes a\u00f1adir una instrucci\u00f3n para que el flujo tenga al menos un paso. \u26a0\ufe0f Limitaci\u00f3n de esta versi\u00f3n: Solamente puedes seleccionar una condici\u00f3n simple, no se pueden generar combinaciones de condiciones. Instrucciones \ud83d\udca1 Una instrucci\u00f3n permite darle una indicaci\u00f3n al bot sobre una acci\u00f3n que debe ejecutar. Esta acci\u00f3n puede significar un contacto dentro de la conversaci\u00f3n o puede ser interna, es decir, que no tendr\u00e1 visibilidad para la persona con la que el bot est\u00e9 \u201chablando\u201d en la conversaci\u00f3n. Desde esta versi\u00f3n podr\u00e1s entregar las siguientes instrucciones al bot: Mensaje La instrucci\u00f3n tipo mensaje permite que el bot env\u00ede un mensaje fijo previamente configurado. El mensaje puede ser del tipo: Texto u Opciones. El mensaje tipo texto, al igual que el de la derivaci\u00f3n, permitir\u00e1 escribir un texto, que permite el uso de variables. El mensaje tipo opciones, a su vez, permite 2 tipos: botones o lista. Esta diferencia solo corresponde a la visualizaci\u00f3n dentro del canal. Por ejemplo, en WhatsApp, la siguiente imagen muestra primero la visualizaci\u00f3n del tipo bot\u00f3n, para m\u00e1ximo 3 opciones y la imagen a la derecha, muestra la visualizaci\u00f3n de opciones tipo lista, de 4 a 11 opciones. La instrucci\u00f3n mensaje-opciones, permitir\u00e1 escribir un t\u00edtulo y las opciones que estimes, como se ve en la imagen: \u26a0\ufe0f Importante: Existe un l\u00edmite de 3 opciones en el caso de los botones y de 11 en el caso de la lista.\nEsta limitante se da por el canal de WhatsApp. Guardar respuesta como variable: Luego de a\u00f1adir las opciones dentro del mensaje, puedes guardar la respuesta del usuario como variable para que el bot pueda utilizarla en alguna futura intenci\u00f3n. Para guardarla, solo debes activar la opci\u00f3n \u201c\u00bfAlmacenar respuesta en una variable?\u201d e ingresar un nombre de variable. Te recomendamos que escojas un nombre representativo que permita identificar f\u00e1cilmente lo que contiene la variable. Derivaci\u00f3n Esta instrucci\u00f3n asignar\u00e1 el ticket a un ejecutivo/a que pertenezca al departamento que quieras derivar. Tambi\u00e9n puedes dejar la derivaci\u00f3n \u201cSin departamento\u201d , lo que har\u00e1 que el ticket se asigne a alg\u00fan ejecutivo/a sin considerar departamento y siguiendo las reglas de la cuenta. La instrucci\u00f3n de derivaci\u00f3n incluye los siguientes par\u00e1metros: Mensaje : el bot escribir\u00e1 un mensaje en el momento de derivar al usuario. Este mensaje puede contener variables (por ejemplo, el nombre de la persona) o tambi\u00e9n puede ser vac\u00edo. Departamento : se puede seleccionar un departamento para que la derivaci\u00f3n sea a alg\u00fan ejecutivo/a de este departamento. Por ejemplo, en caso de tener una intenci\u00f3n de \u201cReclamo\u201d, un posible flujo ser\u00eda el siguiente: Configurar un disparador de tipo condici\u00f3n en que esta condici\u00f3n es que la intenci\u00f3n sea igual a Reclamo. Configurar la instrucci\u00f3n de Derivaci\u00f3n en que el mensaje puede ser \u201c Lamentamos tu inconveniente. Proceder\u00e9 a derivarte para que pueda atenderte alguien del equipo de Soporte \u201d y el departamento ser\u00eda \u201cSoporte\u201d Esta instrucci\u00f3n indica un t\u00e9rmino en el flujo, ya que el bot entregar\u00e1 la gesti\u00f3n del ticket a un/a ejecutivo/a. Cierre Esta instrucci\u00f3n genera el cierre del ticket, entregando un mensaje de despedida configurable. El mensaje cumple con la misma l\u00f3gica que el de derivaci\u00f3n o mensaje tipo texto. Esta instrucci\u00f3n indica un t\u00e9rmino en el flujo ya que cierra el ticket. Ignorar La instrucci\u00f3n de ignorar cierra el ticket sin tener interacci\u00f3n en la conversaci\u00f3n, por lo que no requiere m\u00e1s configuraci\u00f3n. Esta instrucci\u00f3n indica un t\u00e9rmino en el flujo ya que cierra el ticket. Obtenci\u00f3n de datos Esta instrucci\u00f3n permite al bot preguntar y recopilar informaci\u00f3n de los usuarios que interact\u00faen con \u00e9l.  La informaci\u00f3n recopilada se guardar\u00e1 como variables dentro del bot, lo que permite su posterior uso dentro de la conversaci\u00f3n, por ejemplo, puedes crear flujos espec\u00edficos dependiendo de las respuestas que entregue el usuario. Para usar esta instrucci\u00f3n debes llenar los siguientes campos: Mensaje de recopilaci\u00f3n de datos: crear un mensaje de solicitud de obtenci\u00f3n de datos, por ejemplo \u201cNecesito que me env\u00edes los siguientes datos, por favor\u201d. Este mensaje es el que recibir\u00e1 el usuario cuando el bot pregunte los datos. Datos a obtener: se agregar\u00e1n desde 1 a n datos para que el bot pregunte por cada uno y los guarde en las variables definidas. Cada dato debe definirse con: Variable: nombre de la variable en que se almacenar\u00e1 el dato. Ejemplo: nombre. Tipo: puede ser texto, n\u00famero o fecha. Ejemplo: texto. Etiqueta: texto que se mostrar\u00e1 al usuario para recopilar este dato. Ejemplo: Tu nombre. Descripci\u00f3n para el bot: es una descripci\u00f3n destinada al bot para que \u00e9ste entienda qu\u00e9 es lo que debe buscar en la respuesta del usuario. Ejemplo: El nombre de la persona. Dato opcional: se puede configurar un dato como opcional, por lo que el bot podr\u00e1 proceder con el flujo en caso de que no obtenga esta informaci\u00f3n. En el ejemplo, el nombre no ser\u00e1 opcional. Una vez guardadas los datos a consultar en la obtenci\u00f3n de datos, podr\u00e1s visualizarlo en la tabla que se muestra a continuaci\u00f3n, pudiendo editarlos o eliminarlos. Validaci\u00f3n : De manera opcional, puedes validar la obtenci\u00f3n de datos obtenidas, es decir, que el bot pregunte tras obtener los datos, si es que es correcta la informaci\u00f3n que obtuvo. De esta forma, la persona puede corregir datos que el bot haya captado mal y/ o confirmarlos. Limitar reintentos: Recomendamos definir un m\u00e1ximo de reintentos al pedir la informaci\u00f3n, en caso de que el cliente no entienda las preguntas o no quiera entregar la informaci\u00f3n y quiera salir de esta instrucci\u00f3n. Al cumplirse la cantidad de reintentos definidos, se entrega un camino alternativo al cliente, que puede ser una instrucci\u00f3n o un flujo. Para configurar esta caracter\u00edstica, debes ingresar: Cantidad de reintentos: es el n\u00famero que indicar\u00e1 el m\u00e1ximo de veces que el bot puede repetir la misma pregunta consecutiva. La primera vez que el bot haga la pregunta no contar\u00e1 dentro de este m\u00e1ximo, solo se considerar\u00e1n los reintentos. Instrucci\u00f3n o flujo al que se conectar\u00e1 en caso de que se cumplan los intentos m\u00e1ximos. Puedes elegir la opci\u00f3n de \u201csaltar a otra instrucci\u00f3n\u201d o \u201csaltar a otro flujo\u201d y seleccionar la instrucci\u00f3n o flujo que corresponda. \u2753 Para que se cumpla la cantidad m\u00e1xima de reintentos, el bot debe repetir la misma pregunta consecutivamente. Si es que el bot captura al menos un dato, entonces la pregunta ya no ser\u00e1 la misma, por lo que no se considerar\u00e1 un reintento. Ejemplo: Vamos a tener un flujo de cotizaci\u00f3n en donde se le pide al cliente los datos de nombre completo y correo electr\u00f3nico para seguir con la atenci\u00f3n. En caso de que la persona no entregue estos datos en m\u00e1ximo 3 intentos totales, entonces el bot cerrar\u00e1 el ticket por falta de informaci\u00f3n. Condici\u00f3n La instrucci\u00f3n condici\u00f3n se utiliza para evaluar una condici\u00f3n l\u00f3gica y dirigir el flujo de conversaci\u00f3n por caminos espec\u00edficos seg\u00fan el resultado de esa evaluaci\u00f3n. Una condici\u00f3n siempre va a dividir el flujo en n ramas. \ud83d\udca1 El concepto de \"ramas\" se refiere a las diferentes direcciones que puede tomar un flujo de conversaci\u00f3n basado en las condiciones especificadas en una instrucci\u00f3n condicional. Las ramas representan caminos alternativos que se siguen seg\u00fan el resultado de la evaluaci\u00f3n de las condiciones. Por defecto siempre existir\u00e1n al menos 2 ramas: una que debe tener una condici\u00f3n y la por defecto que se llamar\u00e1 \u201cDe lo contrario\u201d. \ud83d\udca1 La rama \u201cDe lo contrario\u201d indica que si ninguna de las condiciones previas se cumple, el bot seguir\u00e1 el camino de esta rama. Tipo de condici\u00f3n La condici\u00f3n puede basarse en: 1.- Variable : son variables definidas previamente en el bot, por ejemplo desde la instrucci\u00f3n de obtenci\u00f3n de datos. Si utilizas este tipo de condici\u00f3n, entonces tienes que asegurarte de que el bot ya maneje el valor de esta variable. Ejemplo: podr\u00edas configurar una condici\u00f3n que a partir de la variable \u201cedad\u201d pueda generar 2 caminos, mayores de 18 a\u00f1os o menores de 18 a\u00f1os. De esta manera puedes ir generando distintos mensajes o flujos para los usuarios seg\u00fan se presenten. Cuando una condici\u00f3n de tipo variable, tendr\u00e1s que indicar qu\u00e9 variable previamente definida en el bot vas a utilizar (campo desplegable), luego qu\u00e9 operador aplica para tu condici\u00f3n y finalmente un valor. En este ejemplo ser\u00eda as\u00ed: 2.- Intenci\u00f3n: son las mismas intenciones explicadas previamente. Al utilizar esta condici\u00f3n, se habilitar\u00e1 un camino de la conversaci\u00f3n a partir de la intenci\u00f3n que se detecte en el mensaje anterior. Ejemplo: puede que el usuario exprese una intenci\u00f3n clara de reclamo. Si quieres hacer algo particular en este caso, entonces puedes generar una condici\u00f3n a partir de la intenci\u00f3n \u201creclamo\u201d y generar mensajes o cualquier otra serie de instrucciones espec\u00edficas para el caso, como derivar a un departamento de soporte. En el caso de la condici\u00f3n con intenci\u00f3n, la configuraci\u00f3n es simplemente indicar qu\u00e9 intenci\u00f3n (previamente definida) es la que se busca para activar la rama: 3.- Mensaje: esta condici\u00f3n tomar\u00e1 el mensaje previo y basar\u00e1 el resultado seg\u00fan lo que se indique. Ejemplo: si se tiene un men\u00fa de opciones, puedes generar una rama por cada bot\u00f3n que seleccione el usuario utilizando una condici\u00f3n de tipo mensaje \u201cigual a\u201d y entregando el valor de cada bot\u00f3n. De esta manera puedes configurar un camino diferente seg\u00fan la opci\u00f3n de men\u00fa que seleccione el usuario. En este caso, el operador l\u00f3gico pueden ser los que se muestran en la siguiente imagen: Finalmente, se agregan las acciones en caso de que la condici\u00f3n se cumpla. Existen 2 opciones: 1.- Otro flujo: donde conectas un flujo ya definido a una de las ramas para que se gatille cuando la condici\u00f3n se cumpla. En caso de que selecciones esta opci\u00f3n, puedes elegir a partir del listado desplegable con todos los flujos definidos en tu bot o crear uno nuevo. Usar un flujo ya definido o crear uno nuevo puede servir para encapsular un conjunto de instrucciones que se repetir\u00e1 en m\u00e1s de un flujo y entonces puede reutilizarse sin tener que crear las instrucciones repetitivamente. 2.- Una instrucci\u00f3n de este flujo: en caso de que se cumple la condici\u00f3n, el flujo ejecutar\u00e1 la instrucci\u00f3n que determines de este mismo flujo. En caso de que selecciones esta opci\u00f3n, se mostrar\u00e1n todas las instrucciones de este mismo flujo. Se recomienda usar una instrucci\u00f3n del mismo flujo cuando se quiere tener todo dentro del mismo flujo, en caso de que sea algo que solo servir\u00e1 para este caso y no es algo que se repite en muchos casos. Ejemplo de instrucci\u00f3n condici\u00f3n Para seguir con la configuraci\u00f3n de este flujo, vamos a configurar las condiciones con el tipo \u201cMensaje\u201d. En este ejemplo, se tiene primero una instrucci\u00f3n tipo mensaje- opciones, que entrega una botonera con las siguientes opciones presentadas en la imagen: Para cada opci\u00f3n del usuario se gener\u00f3 una rama distinta, por lo que se tiene 2 ramas distintas, adem\u00e1s de la rama por defecto que es \u201cDe lo contrario\u201d. La rama A, ser\u00e1 para el caso en que el cliente selecciona \u201cRetiro en tienda\u201d. Para esto, marcamos la opci\u00f3n \u201cTipo de condici\u00f3n\u201d = mensaje. Operador: \u201cEs igual a\u201d Valor objeto: \u201cRetiro en tienda\u201d Se seleccion\u00f3 la opci\u00f3n Una instrucci\u00f3n de este flujo y se conect\u00f3 la rama con la instrucci\u00f3n de Cierre en donde se le da la direcci\u00f3n de retiro al cliente. La rama B es para el caso de Despacho a domicilio. Para esto, marcamos la opci\u00f3n \u201cTipo de condici\u00f3n\u201d = mensaje. Operador: \u201cEs igual a\u201d Valor objeto: \u201cDespacho a domicilio\u201d En este caso, queremos que si la persona marca esta opci\u00f3n, el bot le pregunte su direcci\u00f3n, por lo que conectamos la rama con la instrucci\u00f3n de obtenci\u00f3n de datos donde pedimos los datos de domicilio. La rama por defecto \u201cDe lo contrario\u201d, la vinculamos a una instrucci\u00f3n previamente definida de mensaje donde se le pide a la persona que por favor responda con los botones. El diagrama mostrar\u00e1 el caso anterior de la siguiente forma: \ud83d\udca1 Es importante notar que el orden en que se configuren las ramas importa , ya que la condici\u00f3n se evaluar\u00e1 desde la A (1) hasta el caso de lo contrario en orden ascendente, por lo que si en un caso se cumplieran 2 condiciones, entonces el bot seguir\u00eda la primera rama que se haya configurado. Esto en el diagrama se muestra con los n\u00fameros que anteponen cada condici\u00f3n. As\u00ed se visualiza la instrucci\u00f3n condici\u00f3n una vez finalizada su configuraci\u00f3n: Cada rama debe tener un check verde \u2705 que indique que est\u00e1 correctamente configurada para poder guardar la instrucci\u00f3n. Pueden existir infinidad de ramas, pero se aconseja manejar hasta 5 para no complejizar los flujos. Actualizar metadatos Esta instrucci\u00f3n sirve -como dice el nombre- para actualizar valores en los metadatos configurados desde Adereso Desk, tanto metadatos de clientes como de tickets. Estos valores pueden ser fijos o pueden ser actualizados con variables obtenidas por el mismo bot, por ejemplo, con la instrucci\u00f3n de obtenci\u00f3n de datos. Dentro de esta instrucci\u00f3n se pueden actualizar uno a muchos metadatos distintos. Para hacerlo, se deben ir agregando uno a uno, como muestra la imagen. Para cada uno, se debe completar lo siguiente: Tipo: indica si el metadato es de Cliente o Ticket. Metadato: especificar el metadato que se quiere actualizar. Se desplegar\u00e1n seg\u00fan la selecci\u00f3n previa (Cliente o Ticket) Valor o variable: indica si se va a actualizar el metadato con un valor fijo ingresado en la instrucci\u00f3n o con una variable que debe estar previamente definida en el bot. En caso de elegir variable : se desplegar\u00e1 la lista de variables definidas en el bot y se debe elegir una. En caso de elegir valor : debes ingresar un valor fijo, que tendr\u00e1 que cumplir con el tipo de metadato (texto, fecha, etc) Metadato tipo texto: Metadato tipo fecha: Metadato tipo S\u00ed/No: Una vez que termines de configurar esta instrucci\u00f3n, podr\u00e1s probar que al activar este bot en una cuenta y al cumplir los pasos del flujo, el bot ir\u00e1 actualizando los metadatos seg\u00fan las definiciones dadas. Ejemplo de actualizaci\u00f3n de metadatos El siguiente flujo est\u00e1 hecho en el bot de una librer\u00eda virtual y consiste en que al detectar la intenci\u00f3n de Compra, el bot pedir\u00e1 informaci\u00f3n del nombre del libro y el nombre de la persona que quiere comprar y los guardar\u00e1 en los metadatos del ticket. Obtenci\u00f3n de datos: el bot pedir\u00e1 el nombre de la persona y del libro. Se actualizar\u00e1n los metadatos correspondientes: Luego, en el ticket podemos ver la conversaci\u00f3n que tuvo el bot: Y los metadatos actualizados: Agregar etiquetas Esta instrucci\u00f3n permite agregar etiquetas (tags) a los tickets. \ud83d\udca1 Las etiquetas son palabras claves o t\u00e9rminos que se asigna a un ticket para categorizarlo o identificarlo de manera m\u00e1s espec\u00edfica. Son herramientas flexibles que permiten a los usuarios agrupar tickets con caracter\u00edsticas o temas comunes, facilitando la gesti\u00f3n y priorizaci\u00f3n del trabajo. En esta instrucci\u00f3n, el usuario define la(s) etiqueta(s) que elija para categorizar en alg\u00fan punto del flujo a los tickets que lleguen a este punto. \u26a0\ufe0f Las etiquetas son textos fijos que solo pueden contener min\u00fasculas y n\u00fameros.  \u26a0\ufe0f Para agregar etiquetas, solo debes escribir el texto que quieras y apretar \u201center\u201d. Puedes agregar las etiquetas que quieras y reutilizar las que ya han sido creadas anteriormente. Mientras escribas, se desglozar\u00e1n las etiquetas existentes que coincidan con el texto que est\u00e1s agregando. En caso de no existir, se crear\u00e1 una etiqueta nueva. Tambi\u00e9n puedes eliminar las etiquetas de la instrucci\u00f3n, haciendo click en la cruz \u274ccorrepondiente. Al utilizar esta instrucci\u00f3n, los tickets quedar\u00e1n con las etiquetas creadas, como se puede ver en la exportaci\u00f3n de los tickets: Priorizaci\u00f3n de tickets Esta instrucci\u00f3n permite agregar una prioridad al ticket. Esta prioridad puede ser: m\u00e1xima, alta, media, baja o m\u00ednima. Por defecto todos los tickets tiene prioridad media. La prioridad se mostrar\u00e1 en el ticket en Desk y en caso de tener asignaci\u00f3n con topes , la prioridad ajustar\u00e1 el orden en que los tickets son asignados a los agentes disponibles, por orden de prioridad desde m\u00e1xima hasta m\u00ednima, y luego, seg\u00fan FIFO o LIFO (configuraci\u00f3n de cliente). Desde flujos, se configura el nivel de prioridad que se les quiere dar a determinados grupo de ticket. Por ejemplo, puede ser darle prioridad M\u00e1xima a un ticket que se haya detectado con alg\u00fan caso cr\u00edtico para el negocio. Ejemplo: Supongamos que tenemos un flujo para reclamos de nuestro negocio, donde el bot proceder\u00e1 y derivar\u00e1 a cada departamento seg\u00fan el caso explicado por el cliente y en la atenci\u00f3n recopilar\u00e1 informaci\u00f3n para ahorrar trabajo de personas. El bot entregar\u00e1 las siguientes opciones ante un reclamo del cliente, para que se clasifique el tipo de problema que tiene: Para el negocio los reclamos asociados a un producto da\u00f1ado son muy cr\u00edticos y se necesita atenci\u00f3n inmediata para contener a estos clientes, por lo que estos casos se derivar\u00e1n con prioridad m\u00e1xima, y el resto de los casos (problemas con pedido o cobros incorrectos) se derivar\u00e1n con prioridad alta. En caso de los otros reclamos, no tendr\u00e1n prioridad, por lo que quedar\u00e1n por defecto en media. En el diagrama se muestran las instrucciones con su respectivo nivel de prioridad. Desde Adereso Desk, la prioridad se ver\u00e1 en el ticket una vez abierto como muestra la siguiente imagen. Esta prioridad har\u00e1 que se asigne m\u00e1s r\u00e1pido dentro de la cola de agentes. \ud83d\udd0e En caso de que tengas dudas o el problema persista, comun\u00edcate con nosotros v\u00eda chat, al WhatsApp +56944501722 o al email soporte@adere.so"
    }

    fragmented_article = fragmentize_article(article)

    completion = openai_client.chat.completions.create(
        model=OPENAI_LLM_MODEL,
        temperature=OPENAI_LLM_TEMPERATURE,
        messages=[
            {"role": "system", "content": testing_system_prompt},
            {"role": "user", "content": f"here is a prompt for a user prompt: {generate_user_prompt(fragmented_article)}"},
        ],
    )
    # Se espera que obtenga un scode de al menos 75
    assert int(completion.choices[0].message.content) >= 75