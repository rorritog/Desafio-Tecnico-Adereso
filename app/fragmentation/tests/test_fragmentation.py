from app.fragmentation.controller import fragmentize_article, tokenizer
from app.configs import FRAGMENTS_MAX_TOKENS


def test_fragmentation() -> None:
    """
    Prueba si la fragmentación es efectiva a el límite de tokens.
    """
    article = {
        "type": "article", 
        "url": "https://adereso.helpkit.so/desarrolladores/cYoxdnyRQf4rreHwjirZgZ/tickets-%5Bdesarrolladores%5D/q8gccvU7sJ4DjsV2D4fVTC", 
        "text": "Tickets [Desarrolladores]\nDetalle de un ticket API call: v2/ticket/{ticket_id}/ - GET Probar servicio Retorna un objeto tipo ticket utilizando su id. tip Para obtener el id \"C\u00f3digo de identificaci\u00f3n para el ticket\" debes realizar la siguiente consulta a la API: /v2/ticket/{ticket_id}/by_agent_id/ siendo {ticket_id} el c\u00f3digo de identificaci\u00f3n de cara al ejecutivo A continuaci\u00f3n se ve un ejemplo de respuesta: {\n  \"id\": \"583dcb2855d0a46e438d0206\",\n  \"identifier\": \"261\",\n  \"created\": \"2016-11-29T18:38:32\",\n  \"current_assignment\": {\n    \"cmid\": 467,\n    \"name\": \"Francisco Pinto\",\n    \"email\": \"fapint@somecorporate.com\"\n  },\n  \"is_closed\": true,\n  \"last_author\": \"Jhon Doe\",\n  \"last_content\": \"Hi, I need help configuring with my product.\",\n  \"social_network\": \"facebook\",\n  \"subject\": null,\n  \"updated_time\": \"2016-12-21T13:17:29.283\"\n} TicketSummaryResponse Corresponde al resumen de un ticket de atenci\u00f3n. Campo Descripci\u00f3n Tipo id C\u00f3digo de identificaci\u00f3n para el ticket string identifier C\u00f3digo de identificaci\u00f3n de cara al ejecutivo string created Fecha de creaci\u00f3n del ticket string current_assignment El ejecutivo de atenci\u00f3n asignado actualmente CMEmbeddedSerializer is_closed Indica si el ticket est\u00e1 cerrado boolean last_author Indica el n\u00f3mbre del \u00faltimo participante en el ticket string last_content Indica el contenido enviado por el \u00faltimo participante en el ticket string social_network Canal vinculado al ticket string updated_time Fecha de actualizaci\u00f3n del ticket string subject En caso de ser un email, contiene el asunto string CMEmbeddedSerializer Corresponde al ejecutivo de atenci\u00f3n o ejecutivo. Campo Descripci\u00f3n Tipo cmid Id del ejecutivo. integer name Nombre del ejecutvio string email Email del ejecutivo (opcional) string Mensajes de un ticket API call: /v2/ticket/{ticket_id}/messages/ - GET Probar servicio Retorna los mensajes de un ticket utilizando su id. A continuaci\u00f3n se ve un ejemplo de respuesta: {\n  \"status\": 200,\n  \"messages\": [\n    {\n      \"content\": \"Hola Carlos, \u00bfen qu\u00e9 te podemos ayudar?\",\n      \"author_id\": \"572c2b2z20a9g4201250leb4\",\n      \"author_name\": \"Super Empresa\",\n      \"author_account\": \"superempresa\",\n      \"created\": \"2014-11-30T20:46:58\",\n      \"media\": \"http://placekitten.com/200/300\"\n    },\n    {\n      \"content\": \"@superempresa con uno de sus productos\",\n      \"author_id\": \"546b9b2720a9f1301050fec3\",\n      \"author_name\": \"Carlos Palma\",\n      \"author_account\": \"cpalma\",\n      \"created\": \"2014-11-30T18:55:04\"\n    },\n    {\n      \"content\": \"@superempresa hola tengo un problema\",\n      \"author_id\": \"546b9b2720a9f1301050fec3\",\n      \"author_name\": \"Carlos Palma\",\n      \"author_account\": \"cpalma\",\n      \"created\": \"2014-11-30T18:50:11\"\n    }\n  ]\n} MessagesListResponse Corresponde a la lista de mensajes de un ticket. Campo Descripci\u00f3n Tipo status C\u00f3digo de retorno de la petici\u00f3n. 200 si la petici\u00f3n fue exitosa integer messages Lista de mensajes asociados al ticket MessageResponse MessageResponse Corresponde a un mensaje en particular. Campo Descripci\u00f3n Tipo content Texto del mensaje. string author_id Id del autor del mensaje string author_name Nombre del autor del mensaje string author_account Cuenta del autor del mensaje string created Fecha de creaci\u00f3n string media Url de media (opcional) string Cerrar ticket API call: /v2/ticket/{ticket_id}/close/ - POST Probar servicio Cierra un ticket a partir de su id. Ejemplos Ejemplo de respuesta exitosa: {\n  \"status\": 200,\n  \"message\": \"Ok\"\n} Usando swagger Desde nuestro sitio api-cluster.postcenter.io podr\u00e1s hacerlo de la siguiente manera Usando Postman Te mostramos un ejemplo de como hacerlo Reasignar ticket API call: /v2/ticket/{ticket_id}/reassign/ - POST Probar servicio Gatilla la re-asignaci\u00f3n autom\u00e1tica de un ticket a partir de su id. Ejemplos Ejemplo de respuesta exitosa: {\n  \"status\": 200,\n  \"message\": \"Ok\"\n} Usando swagger Desde nuestro sitio api-cluster.postcenter.io podr\u00e1s hacerlo de la siguiente manera Usando Postman Te mostramos un ejemplo de como hacerlo Obtener ticket interno desde el id visible por ejecutivos API call: /v2/ticket/{agent_ticket_id}/by_agent_id/ - POST Probar servicio El ejecutivo en Adereso ve otro tipo de identificador en cada ticket y no es el mismo que se utiliza en esta API. Para poder hacer transformaciones entre este tipo de identificador y el que ve el ejecutivo, hemos habilitado este servicio web que permite desde un id de ejecutivo, obtener el id interno de API. Ejemplos Ante una petici\u00f3n GET a la URL /v2/ticket/261/by_agent_id/ de la API, obtendremos lo siguiente: {\n    \"status\": 200,\n    \"ticket_id\": \"5b64e514ed76411a80dd3bed\"\n} Teniendo el ID interno, es posible obtener el id de ejecutivo consultando el servicio web de detalle de ticket. Usando Postman Te mostramos un ejemplo de como hacerlo Obtener un ejecutivo disponible para atender un ticket API call: /v2/ticket/{ticket_id}/get_possible_agent/ - GET Probar servicio Este servicio entrega el cmid de un ejecutivo disponible para responder el ticket con id ticket_id. Por ejemplo, una respuesta posible puede ser la siguiente: {\n    \"status\": 200,\n    \"assignation\": {\n        \"cm\" : 27,\n        \"reason\": \"Assign Because Workload and non cm was online\"\n    }\n} La respuesta tiene la siguiente estructura ( AssignationResponse ): Campo Descripci\u00f3n Tipo status C\u00f3digo de retorno de la petici\u00f3n. 200 si la petici\u00f3n fue exitosa integer assignation Asignaci\u00f3n de ejecutivo disponible AssignationDetail La asignaci\u00f3n tiene la siguiente estructura ( AssignationDetail ) Campo Descripci\u00f3n Tipo cm Identificador del ejecutivo para asignar. null en caso de no encontrar ejecutivo disponible integer reason Texto descriptivo justificando la asignaci\u00f3n correspondiente string Obtener datos de un usuario API call: /v2/ticket/{ticket_id}/users/ - GET Probar servicio Este servicio entrega el detalle de un usuario que participa en el ticket ingresado. Por ejemplo, una respuesta posible puede ser la siguiente: {\n    \"status\": 200,\n    \"users\": [\n        {\n            \"twitter_followers_count\": \"-\",\n            \"client_number\": \"\",\n            \"phone\": \"\",\n            \"last_ticket\": null,\n            \"address\": \"\",\n            \"name\": \"sachavalentinar@gmail.com\",\n            \"nick_name\": \"sachavalentinar@gmail.com\",\n            \"gender\": \"0\",\n            \"country_id\": null,\n            \"ticket_count\": 1,\n            \"influencer\": false,\n            \"email\": \"sachavalentinar@gmail.com\"\n        }\n    ]\n} Usando swagger Desde nuestro sitio api-cluster.postcenter.io podr\u00e1s hacerlo de la siguiente manera Usando Postman Te mostramos un ejemplo de como hacerlo Servicios Tickets Tickets de clientes API call: /v2/tickets/?country_id={country_id} - GET Probar servicio Retorna todos los tickets asociados a un cliente/usuario utilizando su country_id. tip \"Preguntas relacionadas:\"\" * [\u00bfCu\u00e1l es el campo `country_id` y d\u00f3nde lo encuentro?](/faq/#cual-es-el-campo-country_id-y-donde-lo-encuentro)\n* [\u00bfQu\u00e9 ocurre si no veo el `country_id` en el perfil de mis usuarios?](/faq/#que-ocurre-si-no-veo-el-rut-en-el-perfil-de-mis-usuarios) La informaci\u00f3n que se retorna corresponde a un resumen de los tickets encontrados. Utilice el servicio /v2/ticket/{ticket_id}/ de la API para obtener un ticket en particular. A continuaci\u00f3n se ve un ejemplo de respuesta: {\n  \"status\": 200,\n  \"tickets\": [\n    {\n      \"id\": \"583dcb2855d0a46e438d0206\",\n      \"identifier\": 1242,\n      \"created\": \"2016-11-29T18:38:32\",\n      \"current_assignment\": {\n        \"cmid\": 467,\n        \"name\": \"Francisco Pinto\",\n        \"email\": \"fapint@somecorporate.com\"\n      },\n      \"is_closed\": true,\n      \"last_author\": \"Jhon Doe\",\n      \"last_content\": \"Hi, I need help configuring with my product.\",\n      \"social_network\": \"facebook\",\n      \"title\": null,\n      \"updated_time\": \"2016-12-21T13:17:29.283\"\n    }\n  ]\n} En esta respuesta hay 3 estructuras de datos anidados: Lista de Tickets , que contiene varios Ticket y el Ejecutivo de Atenci\u00f3n asignado, contenido en cada Ticket. TicketsListResponse Corresponde a una lista de tickets. Campo Descripci\u00f3n Tipo status C\u00f3digo de retorno de la petici\u00f3n. 200 si la petici\u00f3n fue exitosa integer tickets Lista de tickets asociados al usuario TicketSummaryResponse TicketSummaryResponse Resumen de un ticket de atenci\u00f3n. Campo Descripci\u00f3n Tipo id C\u00f3digo de identificaci\u00f3n para el ticket string identifier C\u00f3digo de identificaci\u00f3n de cara al ejecutivo int created Fecha de creaci\u00f3n del ticket string current_assignment El ejecutivo de atenci\u00f3n asignado actualmente CMEmbeddedSerializer is_closed Indica si el ticket est\u00e1 cerrado boolean last_author Indica el n\u00f3mbre del \u00faltimo participante en el ticket string last_content Indica el contenido enviado por el \u00faltimo participante en el ticket string social_network Canal vinculado al ticket string updated_time Fecha de actualizaci\u00f3n del ticket string title En caso de ser un email, contiene el asunto string CMEmbeddedSerializer Corresponde al ejecutivo de atenci\u00f3n. Campo Descripci\u00f3n Tipo cmid Id del ejecutivo. integer name Nombre del ejecutvio string email Email del ejecutivo (opcional) string Tickets asociados a un usuario de Facebook API call: /v2/tickets/facebook/?page_id={page_id}&uid={uid} - GET Probar servicio Retorna todos los tickets asociados a un cliente/usuario a partir de su uid de Facebook en el contexto de un page_id. La informaci\u00f3n que se retorna corresponde a un resumen de los tickets encontrados. Utilice el servicio /v2/ticket/{ticket_id}/ de la API para obtener un ticket en particular. A continuaci\u00f3n se ve un ejemplo de respuesta: {\n  \"status\": 200,\n  \"tickets\": [\n    {\n      \"id\": \"583dcb2855d0a46e438d0206\",\n      \"identifier\": 1242,\n      \"created\": \"2016-11-29T18:38:32\",\n      \"current_assignment\": {\n        \"cmid\": 467,\n        \"name\": \"Francisco Pinto\",\n        \"email\": \"fapint@somecorporate.com\"\n      },\n      \"is_closed\": true,\n      \"last_author\": \"Jhon Doe\",\n      \"last_content\": \"Hi, I need help configuring with my product.\",\n      \"social_network\": \"facebook\",\n      \"title\": null,\n      \"updated_time\": \"2016-12-21T13:17:29.283\"\n    }\n  ]\n} En esta respuesta hay 3 estructuras de datos anidados: Lista de Tickets , que contiene varios Ticket y el Ejecutivo de Atenci\u00f3n asignado, contenido en cada Ticket. Explicadas arriba. Tickets filtrados por estado API call: /v2/tickets/state/{state} - GET Probar servicio Retorna los tickets que est\u00e1n en cierto estado. Los estados soportados por el momento en la plataforma son open, closed, ignored, inProgress. Los tickets de su establecimiento estar\u00e1n en alguno de estos estados, este servicio entrega los tickets que se encuentren en el estado especificado. El endpoint retorna una lista de id s de tickets, si necesita ver el detalle utilice el servicio /v2/ticket/{ticket_id}/ de la API. Un ejemplo de respuesta exitosa es la siguiente {\n  \"tickets\": [\n    \"5cd4afa1071543013a2428de\",\n    \"5cd4a3fa0715435bc47578fd\",\n    \"5cd49e150715435bc47578fa\",\n    \"5cd48e710715435bc47578f7\",\n    \"5cd48cdb0715435bc47578f4\",\n    \"5cd48cb30715435bc47578f1\",\n    \"5cd48a450715435bc47578ee\",\n    \"5cd4881e0715435bc47578eb\",\n    \"5cd4881d0715435bc47578e8\",\n    \"5cd4881d0715435bc47578e5\",\n    \"5cd47a3c0715435bc47578e2\",\n    \"5cd46b520715435bc47578df\",\n    \"5cd467530715435bc47578dc\",\n    \"5cd4585f0715435bc47578d9\",\n   ...\n  ],\n  \"status\": 200\n} En caso que el estado especificado sea distinto de los mencionados o que su establecimiento no tenga este estado, se entregar\u00e1 la siguiente respuesta {\n  \"message\": \"Non-existent status\",\n  \"status\": 404\n} Tickets filtrados por canal y rango de fechas (Paginado | 20) API call: /v2/tickets/paginated/{social_network}/?from={from_date}&to={to_date}&next={next_page} - GET Probar servicio Este servicio entrega los tickets asociados a cierto canal, en un rango de fechas especificado. Los tickets entregados aparecen de m\u00e1s reciente a m\u00e1s antiguo, seg\u00fan fecha de creaci\u00f3n. Si necesita saber cuales son los canales asociados a los tickets de su establecimiento puede utilizar el endpoint /v2/accounts/all/ de la API. El rango de fechas se entrega a trav\u00e9s de los par\u00e1metros from y to que representan los l\u00edmites de fechas inferior y superior respectivamente, siendo from inclusivo y to exclusivo. Las fechas deben ser especificadas en el formato DD-MM-AAAA [hh:mm:ss]. Por ejemplo, ser\u00edan v\u00e1lidas 12-10-2018 , 09-08-2017 12:22:25 , pero NO otros formatos como 12/12/2012 , 12-12-12 , 10-12 , 03-16-2014 , 12-10-2018 10:23. Este servicio es Paginado , por lo que los tickets se retornan en p\u00e1ginas de 20 (excepto quiz\u00e1s la \u00faltima que podr\u00eda entregar menos de 20). Para avanzar en las p\u00e1ginas, cada respuesta entrega el atributo next_page , que corresponde a un identificador que debe ser utilizado en el par\u00e1metro next de la siguiente consulta. Un ejemplo de uso del servicio es el siguiente v2/tickets/twitter/from=18-04-2019&to=18-04-2019%2021%3A41%3A00 (%20 --> \" \", %3A --> \":\") {\n  \"tickets\": [\n    {\n      \"status\": \"Abierto\",\n      \"updated_datetime\": \"18-04-2019 22:30:21\",\n      \"created_datetime\": \"18-04-2019 21:40:59\",\n      \"social_network\": \"twitter\",\n      \"identifier\": 322,\n      \"id\": \"5cb8eeeb0715437c9126715e\"\n    },\n   ...\n    {\n      \"status\": \"Abierto\",\n      \"updated_datetime\": \"19-04-2019 08:38:52\",\n      \"created_datetime\": \"18-04-2019 10:38:52\",\n      \"social_network\": \"email\",\n      \"identifier\": 223,\n      \"id\": \"5cb8ee6c0715437c91266f71\"\n    }\n  ],\n  \"status\": 200,\n  \"number_of_tickets\": 100,\n  \"next_page\": \"5cb8fa940715430c9c8824f3\"\n} En esta respuesta se entregan los 100 primeros tickets, lo que se indica en el atributo number_of_tickets. Adem\u00e1s se entrega en next_page el identificador que se debe utilizar para obtener la siguiente p\u00e1gina. Al pedir la pa\u01f5ina 2 , v2/tickets/twitter/from=18-04-2019&to=18-04-2019%2021%3A41%3A00&next=5cb8fa940715430c9c8824f3 obtenemos {\n  \"tickets\": [\n    {\n      \"status\": \"Abierto\",\n      \"updated_datetime\": \"19-04-2019 08:35:52\",\n      \"created_datetime\": \"18-04-2019 12:24:24\",\n      \"social_network\": \"email\",\n      \"identifier\": 222,\n      \"id\": \"5cb8ee660715437c91266e27\"\n    },\n    {\n      \"status\": \"Abierto\",\n      \"updated_datetime\": \"19-04-2019 08:21:10\",\n      \"created_datetime\": \"18-04-2019 08:22:15\",\n      \"social_network\": \"email\",\n      \"identifier\": 221,\n      \"id\": \"5cb8ee660715437c91266e22\"\n    }\n  ],\n  \"status\": 200,\n  \"number_of_tickets\": 2,\n  \"next_page\": null\n} Que retorna los 2 tickets faltantes, adem\u00e1s el atributo next_page tiene el valor null que indica que no hay m\u00e1s p\u00e1ginas en la consulta. Los elementos retornados por cada ticket corresponden a un resumen del mismo. Si necesita m\u00e1s informaci\u00f3n de un ticket utilice el siguiente servicio de la API: /v2/ticket/{ticket_id}/ para obtener un ticket en particular. TicketSummaryResponse Corresponde al resumen de un ticket de atenci\u00f3n. Campo Descripci\u00f3n Tipo id C\u00f3digo de identificaci\u00f3n para el ticket string identifier C\u00f3digo de identificaci\u00f3n de cara al ejecutivo int created_datetime Fecha de creaci\u00f3n del ticket string updated_datetime Fecha de actualizaci\u00f3n del ticket string status Estado del ticket (Abierto, Cerrado, Ignorado, En Progreso) string social_network Canal vinculado al ticket string"
    }

    article_fragments = fragmentize_article(article)['fragments']

    fragments_lenth = [len(tokenizer.encode(fragment)) for fragment in article_fragments]

    # Check si algun fragmento es mas largo que el máximo
    assert any([fragments_token_length > FRAGMENTS_MAX_TOKENS for fragments_token_length in fragments_lenth]) == False